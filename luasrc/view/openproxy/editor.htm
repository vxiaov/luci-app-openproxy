<%+header%>
<style>
    /* 设置编辑器外部容器样式，添加圆角和边框 */
    .editor-container {
        border-radius: 12px;
        /* 圆角 */
        border: 1px solid #ddd;
        /* 边框 */
        overflow: hidden;
        /* 防止内容超出 */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        /* 添加阴影 */
        z-index: 9;
    }
    .CodeMirror {
        min-height: 560px !important;
    }

    .btn {
        max-width: 350px;
        width: 100%;
    }
    .btn:hover {
        transform: scale(1.05);
    }

    .btn:active {
        transform: scale(0.98); /* Slight scale down on click */
    }


</style>

<!-- 引入 Codemirror 核心样式 -->
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/codemirror.css">
<!-- 引入额外插件样式 -->
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/addon/fold/foldgutter.css">
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/addon/lint/lint.css">
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/addon/display/fullscreen.css">
<!-- 引入 Codemirror 核心脚本 -->
<script src="/luci-static/resources/openproxy/codemirror/codemirror.js"></script>
<!-- 引入支持 YAML 的语法高亮 -->
<script src="/luci-static/resources/openproxy/codemirror/mode/yaml/yaml.js"></script>
<!-- 引入功能插件 -->
<script src="/luci-static/resources/openproxy/codemirror/addon/edit/matchbrackets.js"></script>
<script src="/luci-static/resources/openproxy/codemirror/addon/fold/foldcode.js"></script>
<script src="/luci-static/resources/openproxy/codemirror/addon/fold/foldgutter.js"></script>
<script src="/luci-static/resources/openproxy/codemirror/addon/fold/indent-fold.js"></script>
<script src="/luci-static/resources/openproxy/codemirror/addon/display/fullscreen.js"></script>
<script src="/luci-static/resources/openproxy/codemirror/addon/scroll/annotatescrollbar.js"></script>
<script src="/luci-static/resources/openproxy/codemirror/addon/lint/lint.js"></script>
<script src="/luci-static/resources/openproxy/codemirror/addon/lint/yaml-lint.js"></script>

<script src="/luci-static/resources/openproxy/libs/js-yaml.min.js"></script>
<!-- 引入主题样式 -->
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/theme/monokai.css">
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/theme/dracula.css">
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/theme/material.css">
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/theme/rubyblue.css">
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/theme/3024-day.min.css">
<link rel="stylesheet" href="/luci-static/resources/openproxy/codemirror/theme/3024-night.min.css">
<script type="module">
    let initialContent = ""; // 用于记录文件的初始内容
    const themes = ["monokai", "dracula", "3024-night", "3024-day", "material", "rubyblue"];
    // 切换主题功能
    let currentThemeIndex = 1;
    // 当前是否折叠
    let isFolded = false;
    // 初始化编辑器
    const editor = CodeMirror.fromTextArea(document.getElementById("yaml-editor"), {
        mode: "yaml",
        lineNumbers: true,
        lineWrapping: true,
        theme: "dracula", // 初始主题
        foldGutter: true,
        matchBrackets: true,
        lint: true,
        collapseIdentical: false,
        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],  // 显示折叠按钮
        autoCloseBrackets: true, // 自动补全括号
        extraKeys: {
            "F2": function (cm) { cm.setOption("fullScreen", !cm.getOption("fullScreen")); }, // 全屏切换
            "Esc": function (cm) { if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false); }, // 退出全屏
            "Ctrl-S": saveFileContent,
        }
    });
    // 切换折叠/展开功能
    function toggleFold() {
        const doc = editor.getDoc();
        const lineCount = doc.lineCount();

        if (isFolded) {
            // 展开所有折叠
            for (let i = 0; i < lineCount; i++) {
                editor.foldCode({ line: i, ch: 0 }, null, "unfold");
            }
        } else {
            // 折叠所有代码
            for (let i = 0; i < lineCount; i++) {
                editor.foldCode({ line: i, ch: 0 }, null, "fold");
            }
        }

        // 切换折叠状态
        isFolded = !isFolded;
    }
    function loadFileContent() {
        var file = document.getElementById("edit_file").value;
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openproxy", "api", "file_content")%>?file=' + encodeURIComponent(file), null, function (response) {
            document.getElementById("yaml-editor").value = response.responseText;
            editor.setValue(response.responseText); // 使编辑器填充加载的内容
            initialContent = response.responseText; // 记录初始内容
            isFolded = false; // 恢复默认的非折叠状态
        });
    }
    function saveFileContent() {
        // 判断内容是否变更，如果发生变更则提示是否确认保存内容
        var file = document.getElementById("edit_file").value;
        var content = editor.getValue();
        // 判断内容是否发生变更
        if (content !== initialContent) {
            // 提示用户是否保存
            var confirmSave = confirm("内容已更改，是否保存?");
            if (confirmSave) {
                // 提交保存请求
                XHR.post('<%=luci.dispatcher.build_url("admin", "services", "openproxy", "api", "save_file")%>', { file: file, content: content }, function () {
                    alert("文件保存成功！");
                    initialContent = content; // 保存后更新初始内容
                });
            } else {
                alert("保存已取消");
            }
        } else {
            alert("没有更改内容，无需保存");
        }
    }
    function deleteFile() {
        var file = document.getElementById("edit_file").value;
        var confirmSave = confirm("确认删除『 " + file + " 』文件?");
        if (confirmSave) {
            XHR.post('<%=luci.dispatcher.build_url("admin", "services", "openproxy", "api", "delete_file")%>', { file: file }, function () {
                // 删除 option 选项, 并重新加载文件内容
                document.getElementById("edit_file").remove(document.getElementById("edit_file").selectedIndex);
                document.getElementById("edit_file").selectedIndex = 0;
                loadFileContent();
                alert("文件删除成功！");

            });
        } else {
            alert("删除已取消");
        }
    }
    function update_value(key, value) {
        XHR.post('<%=luci.dispatcher.build_url("admin", "services", "openproxy", "api", "update_value")%>', { key: key, value: value }, null);
    }
    window.onload = () => {
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openproxy", "api", "load_editor_status")%>', null,
            function (status_code, data) {
                document.getElementById("edit_file").value = data["editor_file"];
                loadFileContent(); // 页面加载时调用加载文件内容
                editor.setOption("theme", themes[data["editor_theme"]] || themes[currentThemeIndex]);
            }
        )
        document.getElementById("toggle-fold").addEventListener("click", toggleFold);
        document.getElementById("edit_file").onchange = loadFileContent;

        document.getElementById("save-code").addEventListener("click", saveFileContent);
        document.getElementById("delete-btn").addEventListener("click", deleteFile);

        document.getElementById("switch-theme").addEventListener("click", () => {
            currentThemeIndex = (currentThemeIndex + 1) % themes.length;
            editor.setOption("theme", themes[currentThemeIndex]);
            update_value("config.editor_theme", currentThemeIndex); // 更新主题
        });
    };
</script>

<% 
    -- 检查文件是否以 .yaml 或 .yml 结尾
    local function is_yaml(file)
        return string.match(file, "%.yaml$") or string.match(file, "%.yml$")
    end
%>

<div class="cbi-section">
    <div class="toolbar">
        <label>
            <%:Select Edit File%>:
        </label>
        <select id="edit_file">
            <% for f in nixio.fs.dir("/etc/openproxy/config/") do if is_yaml(f) then %>
                <option value="<%= '/etc/openproxy/config/' .. f%>">
                    <%:Config File:%><%=f%>
                </option>
            <% end end%>
            <% for f in nixio.fs.dir("/etc/openproxy/custom_rule/") do if is_yaml(f) then %>
                <option value="<%= '/etc/openproxy/custom_rule/' .. f%>">
                    <%:Rule File:%><%=f%>
                </option>
            <% end end%>
            <% for f in nixio.fs.dir("/etc/openproxy/custom_proxy/") do if is_yaml(f) then %>
                <option value="<%= '/etc/openproxy/custom_proxy/' .. f%>">
                    <%:Proxy File:%><%= f %>
                </option>
            <%   end end %>
            <% for f in nixio.fs.dir("/etc/openproxy/template/") do if is_yaml(f) then %>
                <option value="<%= '/etc/openproxy/template/' .. f%>">
                    <%:Template File:%><%=f%>
                </option>
            <% end end%>
        </select>
        <input type="button" class="btn cbi-button cbi-button-reload" id="toggle-fold" value="<%:toggle fold%>"></input>
        <input type="button" class="btn cbi-button cbi-button-reload" id="switch-theme" value="<%:toogle theme%>"></input>
        <input type="button" class="btn cbi-button cbi-button-reload" id="save-code" value="<%:Save%>"></input>
        <input type="button" class="btn cbi-button cbi-button-reload" id="delete-btn" value="<%:Delete%>"></input>
    </div>
</div>
<div class="editor-container">
    <textarea id="yaml-editor"></textarea>
</div>
<div style="margin: 10px 0; text-align: left">
    <b>
        <%:Editor shortcut F2 fullScreen%> | <%:Editor shortcut Esc normal%> | <%:Editor shortcut Ctrl+S save%>
    </b>
</div>
<%+footer%>