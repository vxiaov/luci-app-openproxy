
name: Build openWRT ipk/apk package

permissions:
  contents: write

on:
  push:
    tags:
        - '0.*.*'

jobs:
  build_apk:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-apk

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git wget curl unzip

    - name: Download OpenWrt Snapshot SDK
      run: |
        PAGE_CONTENT=$(curl -s https://downloads.openwrt.org/snapshots/targets/x86/64/)
        # 使用正则表达式提取 SDK 文件名（支持 .tar.zst 格式）
        SDK_FILENAME=$(echo "$PAGE_CONTENT" | grep -oP 'openwrt-sdk-x86-64_gcc-.*+_musl\.Linux-x86_64\.tar\.zst' | head -1)
        
        if [ -z "$SDK_FILENAME" ]; then
          echo "未找到 SDK 文件"
          exit 1
        fi
        
        # 构建完整 URL
        SDK_URL="https://downloads.openwrt.org/snapshots/targets/x86/64/$SDK_FILENAME"

        echo "找到 SDK 文件: $SDK_FILENAME"
        sdk_name=${SDK_FILENAME%.tar.zst}
        wget -c https://downloads.openwrt.org/snapshots/targets/x86/64/${sdk_name}.tar.zst
        tar axf ${sdk_name}.tar.zst
        ln -sf ${sdk_name} openwrt_sdk

    - name: Set up OpenWrt SDK
      run: |
        cd openwrt_sdk
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref_name }}
        path: openwrt_sdk/package/luci-app-openproxy

    - name: Build APK package
      run: |
        cd openwrt_sdk/
        make defconfig
        make package/luci-app-openproxy/prepare
        make package/luci-app-openproxy/compile V=s -j$(nproc)

    - name: Upload .apk package
      id: upload_apk
      uses: actions/upload-artifact@v4
      with:
        name: luci-app-openproxy-apk
        path: openwrt_sdk/bin/packages/x86_64/base/luci-app-openproxy*.apk

  build_ipk:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-ipk

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git wget curl unzip

    - name: Download OpenWrt release SDK
      run: |
        # 找到 SDK 名称 #
        PAGE_CONTENT=$(curl -s https://downloads.openwrt.org/releases/24.10.1/targets/x86/64/)
        SDK_FILENAME=$(echo "$PAGE_CONTENT" | grep -oP 'openwrt-sdk-24\.10\.1-x86-64_gcc-.*+_musl\.Linux-x86_64\.tar\.zst' | head -1)
        if [ -z "$SDK_FILENAME" ]; then
          echo "未找到 SDK 文件"
          exit 1
        fi
        # 构建完整 URL
        sdk_name=${SDK_FILENAME%.tar.zst}
        wget -c https://downloads.openwrt.org/releases/24.10.1/targets/x86/64/${sdk_name}.tar.zst
        tar axf $sdk_name.tar.zst
        ln -sf $sdk_name openwrt_sdk

    - name: Set up OpenWrt SDK
      run: |
        cd openwrt_sdk
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref_name }}
        path: openwrt_sdk/package/luci-app-openproxy
    
    - name: Generate ChangeLog by conventional-changelog
      run: |
        npm install -g conventional-changelog-cli
        cd openwrt_sdk/package/luci-app-openproxy
        conventional-changelog -p angular -r 2 -i CHANGELOG.md -s

    - name: Upload ChangeLog
      uses: actions/upload-artifact@v4
      with:
        name: luci-app-openproxy-changelog
        path: openwrt_sdk/package/luci-app-openproxy/CHANGELOG.md

    - name: Build IPK package
      run: |
        cd openwrt_sdk
        make defconfig
        make package/luci-app-openproxy/prepare
        make package/luci-app-openproxy/compile V=s -j$(nproc)

    - name: Upload .ipk package
      uses: actions/upload-artifact@v4
      with:
        name: luci-app-openproxy-ipk
        path: openwrt_sdk/bin/packages/x86_64/base/luci-app-openproxy*.ipk

  release:
    runs-on: ubuntu-latest
    needs: [build_ipk, build_apk]
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
    - name: Display structure of downloaded files
      run: ls -R
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: |
          luci-app-openproxy-apk/*.apk
          luci-app-openproxy-ipk/*.ipk
        body_path: luci-app-openproxy-changelog/CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
